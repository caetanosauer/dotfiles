# use Ctrl+A as prefix
set -g prefix C-a

# reload config file
bind r source-file ~/.tmux.conf

# fix colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# ask for name when creating new window
bind-key n command-prompt -p "window name:" "new-window; rename-window '%%'"

# make window and pane numbers start at 1 
set -g base-index 1
set -g pane-base-index 1

# move windows to the left or right
bind-key S-Left swap-window -t -1
bind-key S-Right swap-window -t +1

# colors (github.com/tony/tmux-config)
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default
# colors to make obvious which pane is active
set-option -g pane-active-border-fg blue
set -g window-style 'bg=colour239' #light gray
set -g window-active-style 'bg=colour235' #dark gray

# size of history (how many lines we can scroll back)
set-option -g history-limit 100000

# use vi mode in copy mode
set-window-option -g mode-keys vi

# set escape time to a lower threshold (10ms) to avoid long escape in neovim
set-option -sg escape-time 10

# pass these env variables to the tmux session
# set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# Use alt+number to switch windows
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t 0

# vim keys in copy mode (http://www.rushiagr.com/blog/2016/06/16/everything-you-need-to-know-about-tmux-copy-pasting/)
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
## Use this if tmux version < 2.4
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
# bind-key -t vi-copy 'r' rectangle-toggle


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# switch to latest visited tab (like Alt+Tab in Windows)
bind-key -n M-Tab last-window
bind-key -n C-Tab next-window
bind-key -n C-S-Tab previous-window

# Disable implicit renaming of windows
set-window-option -g automatic-rename off
set-option -g allow-rename off 

# Pane creation and destruction as in my vimrc
bind x split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind c kill-pane
bind o kill-pane -a
